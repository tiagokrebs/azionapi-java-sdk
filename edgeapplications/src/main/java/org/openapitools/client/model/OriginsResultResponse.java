/*
 * Edge Application API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OriginsResultResponseAddresses;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OriginsResultResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-12T18:12:04.014507Z[GMT]", comments = "Generator version: 7.7.0")
public class OriginsResultResponse {
  public static final String SERIALIZED_NAME_ORIGIN_ID = "origin_id";
  @SerializedName(SERIALIZED_NAME_ORIGIN_ID)
  private Long originId;

  public static final String SERIALIZED_NAME_ORIGIN_KEY = "origin_key";
  @SerializedName(SERIALIZED_NAME_ORIGIN_KEY)
  private String originKey;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORIGIN_TYPE = "origin_type";
  @SerializedName(SERIALIZED_NAME_ORIGIN_TYPE)
  private String originType;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<OriginsResultResponseAddresses> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORIGIN_PROTOCOL_POLICY = "origin_protocol_policy";
  @SerializedName(SERIALIZED_NAME_ORIGIN_PROTOCOL_POLICY)
  private String originProtocolPolicy;

  public static final String SERIALIZED_NAME_IS_ORIGIN_REDIRECTION_ENABLED = "is_origin_redirection_enabled";
  @SerializedName(SERIALIZED_NAME_IS_ORIGIN_REDIRECTION_ENABLED)
  private Boolean isOriginRedirectionEnabled;

  public static final String SERIALIZED_NAME_HOST_HEADER = "host_header";
  @SerializedName(SERIALIZED_NAME_HOST_HEADER)
  private String hostHeader;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_ORIGIN_PATH = "origin_path";
  @SerializedName(SERIALIZED_NAME_ORIGIN_PATH)
  private String originPath;

  public static final String SERIALIZED_NAME_CONNECTION_TIMEOUT = "connection_timeout";
  @SerializedName(SERIALIZED_NAME_CONNECTION_TIMEOUT)
  private Long connectionTimeout;

  public static final String SERIALIZED_NAME_TIMEOUT_BETWEEN_BYTES = "timeout_between_bytes";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_BETWEEN_BYTES)
  private Long timeoutBetweenBytes;

  public static final String SERIALIZED_NAME_HMAC_AUTHENTICATION = "hmac_authentication";
  @SerializedName(SERIALIZED_NAME_HMAC_AUTHENTICATION)
  private Boolean hmacAuthentication;

  public static final String SERIALIZED_NAME_HMAC_REGION_NAME = "hmac_region_name";
  @SerializedName(SERIALIZED_NAME_HMAC_REGION_NAME)
  private String hmacRegionName;

  public static final String SERIALIZED_NAME_HMAC_ACCESS_KEY = "hmac_access_key";
  @SerializedName(SERIALIZED_NAME_HMAC_ACCESS_KEY)
  private String hmacAccessKey;

  public static final String SERIALIZED_NAME_HMAC_SECRET_KEY = "hmac_secret_key";
  @SerializedName(SERIALIZED_NAME_HMAC_SECRET_KEY)
  private String hmacSecretKey;

  public static final String SERIALIZED_NAME_BUCKET = "bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  private String bucket;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public OriginsResultResponse() {
  }

  public OriginsResultResponse originId(Long originId) {
    this.originId = originId;
    return this;
  }

  /**
   * Get originId
   * @return originId
   */
  @javax.annotation.Nullable
  public Long getOriginId() {
    return originId;
  }

  public void setOriginId(Long originId) {
    this.originId = originId;
  }


  public OriginsResultResponse originKey(String originKey) {
    this.originKey = originKey;
    return this;
  }

  /**
   * Get originKey
   * @return originKey
   */
  @javax.annotation.Nullable
  public String getOriginKey() {
    return originKey;
  }

  public void setOriginKey(String originKey) {
    this.originKey = originKey;
  }


  public OriginsResultResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public OriginsResultResponse originType(String originType) {
    this.originType = originType;
    return this;
  }

  /**
   * Get originType
   * @return originType
   */
  @javax.annotation.Nullable
  public String getOriginType() {
    return originType;
  }

  public void setOriginType(String originType) {
    this.originType = originType;
  }


  public OriginsResultResponse addresses(List<OriginsResultResponseAddresses> addresses) {
    this.addresses = addresses;
    return this;
  }

  public OriginsResultResponse addAddressesItem(OriginsResultResponseAddresses addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Get addresses
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<OriginsResultResponseAddresses> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<OriginsResultResponseAddresses> addresses) {
    this.addresses = addresses;
  }


  public OriginsResultResponse originProtocolPolicy(String originProtocolPolicy) {
    this.originProtocolPolicy = originProtocolPolicy;
    return this;
  }

  /**
   * Get originProtocolPolicy
   * @return originProtocolPolicy
   */
  @javax.annotation.Nullable
  public String getOriginProtocolPolicy() {
    return originProtocolPolicy;
  }

  public void setOriginProtocolPolicy(String originProtocolPolicy) {
    this.originProtocolPolicy = originProtocolPolicy;
  }


  public OriginsResultResponse isOriginRedirectionEnabled(Boolean isOriginRedirectionEnabled) {
    this.isOriginRedirectionEnabled = isOriginRedirectionEnabled;
    return this;
  }

  /**
   * Get isOriginRedirectionEnabled
   * @return isOriginRedirectionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIsOriginRedirectionEnabled() {
    return isOriginRedirectionEnabled;
  }

  public void setIsOriginRedirectionEnabled(Boolean isOriginRedirectionEnabled) {
    this.isOriginRedirectionEnabled = isOriginRedirectionEnabled;
  }


  public OriginsResultResponse hostHeader(String hostHeader) {
    this.hostHeader = hostHeader;
    return this;
  }

  /**
   * Get hostHeader
   * @return hostHeader
   */
  @javax.annotation.Nullable
  public String getHostHeader() {
    return hostHeader;
  }

  public void setHostHeader(String hostHeader) {
    this.hostHeader = hostHeader;
  }


  public OriginsResultResponse method(String method) {
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @javax.annotation.Nullable
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }


  public OriginsResultResponse originPath(String originPath) {
    this.originPath = originPath;
    return this;
  }

  /**
   * Get originPath
   * @return originPath
   */
  @javax.annotation.Nullable
  public String getOriginPath() {
    return originPath;
  }

  public void setOriginPath(String originPath) {
    this.originPath = originPath;
  }


  public OriginsResultResponse connectionTimeout(Long connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
    return this;
  }

  /**
   * Get connectionTimeout
   * @return connectionTimeout
   */
  @javax.annotation.Nullable
  public Long getConnectionTimeout() {
    return connectionTimeout;
  }

  public void setConnectionTimeout(Long connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
  }


  public OriginsResultResponse timeoutBetweenBytes(Long timeoutBetweenBytes) {
    this.timeoutBetweenBytes = timeoutBetweenBytes;
    return this;
  }

  /**
   * Get timeoutBetweenBytes
   * @return timeoutBetweenBytes
   */
  @javax.annotation.Nullable
  public Long getTimeoutBetweenBytes() {
    return timeoutBetweenBytes;
  }

  public void setTimeoutBetweenBytes(Long timeoutBetweenBytes) {
    this.timeoutBetweenBytes = timeoutBetweenBytes;
  }


  public OriginsResultResponse hmacAuthentication(Boolean hmacAuthentication) {
    this.hmacAuthentication = hmacAuthentication;
    return this;
  }

  /**
   * Get hmacAuthentication
   * @return hmacAuthentication
   */
  @javax.annotation.Nullable
  public Boolean getHmacAuthentication() {
    return hmacAuthentication;
  }

  public void setHmacAuthentication(Boolean hmacAuthentication) {
    this.hmacAuthentication = hmacAuthentication;
  }


  public OriginsResultResponse hmacRegionName(String hmacRegionName) {
    this.hmacRegionName = hmacRegionName;
    return this;
  }

  /**
   * Get hmacRegionName
   * @return hmacRegionName
   */
  @javax.annotation.Nullable
  public String getHmacRegionName() {
    return hmacRegionName;
  }

  public void setHmacRegionName(String hmacRegionName) {
    this.hmacRegionName = hmacRegionName;
  }


  public OriginsResultResponse hmacAccessKey(String hmacAccessKey) {
    this.hmacAccessKey = hmacAccessKey;
    return this;
  }

  /**
   * Get hmacAccessKey
   * @return hmacAccessKey
   */
  @javax.annotation.Nullable
  public String getHmacAccessKey() {
    return hmacAccessKey;
  }

  public void setHmacAccessKey(String hmacAccessKey) {
    this.hmacAccessKey = hmacAccessKey;
  }


  public OriginsResultResponse hmacSecretKey(String hmacSecretKey) {
    this.hmacSecretKey = hmacSecretKey;
    return this;
  }

  /**
   * Get hmacSecretKey
   * @return hmacSecretKey
   */
  @javax.annotation.Nullable
  public String getHmacSecretKey() {
    return hmacSecretKey;
  }

  public void setHmacSecretKey(String hmacSecretKey) {
    this.hmacSecretKey = hmacSecretKey;
  }


  public OriginsResultResponse bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Get bucket
   * @return bucket
   */
  @javax.annotation.Nullable
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }


  public OriginsResultResponse prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * Get prefix
   * @return prefix
   */
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginsResultResponse originsResultResponse = (OriginsResultResponse) o;
    return Objects.equals(this.originId, originsResultResponse.originId) &&
        Objects.equals(this.originKey, originsResultResponse.originKey) &&
        Objects.equals(this.name, originsResultResponse.name) &&
        Objects.equals(this.originType, originsResultResponse.originType) &&
        Objects.equals(this.addresses, originsResultResponse.addresses) &&
        Objects.equals(this.originProtocolPolicy, originsResultResponse.originProtocolPolicy) &&
        Objects.equals(this.isOriginRedirectionEnabled, originsResultResponse.isOriginRedirectionEnabled) &&
        Objects.equals(this.hostHeader, originsResultResponse.hostHeader) &&
        Objects.equals(this.method, originsResultResponse.method) &&
        Objects.equals(this.originPath, originsResultResponse.originPath) &&
        Objects.equals(this.connectionTimeout, originsResultResponse.connectionTimeout) &&
        Objects.equals(this.timeoutBetweenBytes, originsResultResponse.timeoutBetweenBytes) &&
        Objects.equals(this.hmacAuthentication, originsResultResponse.hmacAuthentication) &&
        Objects.equals(this.hmacRegionName, originsResultResponse.hmacRegionName) &&
        Objects.equals(this.hmacAccessKey, originsResultResponse.hmacAccessKey) &&
        Objects.equals(this.hmacSecretKey, originsResultResponse.hmacSecretKey) &&
        Objects.equals(this.bucket, originsResultResponse.bucket) &&
        Objects.equals(this.prefix, originsResultResponse.prefix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originId, originKey, name, originType, addresses, originProtocolPolicy, isOriginRedirectionEnabled, hostHeader, method, originPath, connectionTimeout, timeoutBetweenBytes, hmacAuthentication, hmacRegionName, hmacAccessKey, hmacSecretKey, bucket, prefix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginsResultResponse {\n");
    sb.append("    originId: ").append(toIndentedString(originId)).append("\n");
    sb.append("    originKey: ").append(toIndentedString(originKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originType: ").append(toIndentedString(originType)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    originProtocolPolicy: ").append(toIndentedString(originProtocolPolicy)).append("\n");
    sb.append("    isOriginRedirectionEnabled: ").append(toIndentedString(isOriginRedirectionEnabled)).append("\n");
    sb.append("    hostHeader: ").append(toIndentedString(hostHeader)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    originPath: ").append(toIndentedString(originPath)).append("\n");
    sb.append("    connectionTimeout: ").append(toIndentedString(connectionTimeout)).append("\n");
    sb.append("    timeoutBetweenBytes: ").append(toIndentedString(timeoutBetweenBytes)).append("\n");
    sb.append("    hmacAuthentication: ").append(toIndentedString(hmacAuthentication)).append("\n");
    sb.append("    hmacRegionName: ").append(toIndentedString(hmacRegionName)).append("\n");
    sb.append("    hmacAccessKey: ").append(toIndentedString(hmacAccessKey)).append("\n");
    sb.append("    hmacSecretKey: ").append(toIndentedString(hmacSecretKey)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("origin_id");
    openapiFields.add("origin_key");
    openapiFields.add("name");
    openapiFields.add("origin_type");
    openapiFields.add("addresses");
    openapiFields.add("origin_protocol_policy");
    openapiFields.add("is_origin_redirection_enabled");
    openapiFields.add("host_header");
    openapiFields.add("method");
    openapiFields.add("origin_path");
    openapiFields.add("connection_timeout");
    openapiFields.add("timeout_between_bytes");
    openapiFields.add("hmac_authentication");
    openapiFields.add("hmac_region_name");
    openapiFields.add("hmac_access_key");
    openapiFields.add("hmac_secret_key");
    openapiFields.add("bucket");
    openapiFields.add("prefix");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OriginsResultResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OriginsResultResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OriginsResultResponse is not found in the empty JSON string", OriginsResultResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OriginsResultResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OriginsResultResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OriginsResultResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("origin_key") != null && !jsonObj.get("origin_key").isJsonNull()) && !jsonObj.get("origin_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin_key").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("origin_type") != null && !jsonObj.get("origin_type").isJsonNull()) && !jsonObj.get("origin_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin_type").toString()));
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            OriginsResultResponseAddresses.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("origin_protocol_policy") != null && !jsonObj.get("origin_protocol_policy").isJsonNull()) && !jsonObj.get("origin_protocol_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin_protocol_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin_protocol_policy").toString()));
      }
      if ((jsonObj.get("host_header") != null && !jsonObj.get("host_header").isJsonNull()) && !jsonObj.get("host_header").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_header` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_header").toString()));
      }
      if ((jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull()) && !jsonObj.get("method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      if ((jsonObj.get("origin_path") != null && !jsonObj.get("origin_path").isJsonNull()) && !jsonObj.get("origin_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin_path").toString()));
      }
      if ((jsonObj.get("hmac_region_name") != null && !jsonObj.get("hmac_region_name").isJsonNull()) && !jsonObj.get("hmac_region_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hmac_region_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hmac_region_name").toString()));
      }
      if ((jsonObj.get("hmac_access_key") != null && !jsonObj.get("hmac_access_key").isJsonNull()) && !jsonObj.get("hmac_access_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hmac_access_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hmac_access_key").toString()));
      }
      if ((jsonObj.get("hmac_secret_key") != null && !jsonObj.get("hmac_secret_key").isJsonNull()) && !jsonObj.get("hmac_secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hmac_secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hmac_secret_key").toString()));
      }
      if ((jsonObj.get("bucket") != null && !jsonObj.get("bucket").isJsonNull()) && !jsonObj.get("bucket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucket").toString()));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OriginsResultResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OriginsResultResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OriginsResultResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OriginsResultResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<OriginsResultResponse>() {
           @Override
           public void write(JsonWriter out, OriginsResultResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OriginsResultResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OriginsResultResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OriginsResultResponse
   * @throws IOException if the JSON string is invalid with respect to OriginsResultResponse
   */
  public static OriginsResultResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OriginsResultResponse.class);
  }

  /**
   * Convert an instance of OriginsResultResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

